name: Build and Deploy to VPS

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  IMAGE_WEB: ghcr.io/${{ github.repository }}-web:latest
  IMAGE_API: ghcr.io/${{ github.repository }}-api:latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push WEB image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.web
          push: true
          tags: ${{ env.IMAGE_WEB }}

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ env.IMAGE_API }}

      - name: Upload docker-compose.yml to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/var/www/xml-importer"

      - name: Deploy on VPS (docker compose pull/up)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -euo pipefail
            mkdir -p /var/www/xml-importer
            cd /var/www/xml-importer
            # Login no GHCR com token de leitura
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} -p ${{ secrets.GHCR_TOKEN }}
            docker compose pull
            docker compose up -d
            docker image prune -f || true

  deploy-hostinger:
    name: Deploy static build to Hostinger (public_html/xml)
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps and build
        run: |
          npm ci
          npm run build

      - name: Upload dist via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.HOSTINGER_FTP_SERVER }}
          username: ${{ secrets.HOSTINGER_FTP_USER }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          local-dir: dist/
          server-dir: ${{ secrets.HOSTINGER_REMOTE_DIR || 'public_html/xml/' }}
          log-level: standard


