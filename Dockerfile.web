# Dockerfile.web

# 1) Estágio de build (usa Debian slim para evitar problemas do esbuild em Alpine)
FROM node:20-bookworm-slim AS build
WORKDIR /app

# Só os manifests primeiro para cache de dependências
COPY package*.json ./
RUN npm ci

# Agora o restante do código do front
COPY . .

# Se precisar, permita sobrescrever a URL da API via arg/env no build
ARG VITE_API_BASE
ENV VITE_API_BASE=${VITE_API_BASE:-https://api.xml.lojasrealce.shop}

# Build de produção (gera /app/dist)
RUN npm run build

# 2) Estágio de runtime (Nginx somente com os arquivos estáticos)
FROM nginx:1.27-alpine AS runtime

# Configuração do Nginx da raiz do repo
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copia o build do front para o docroot do Nginx
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
HEALTHCHECK --interval=30s --timeout=5s --retries=5 CMD wget -qO- http://localhost/ || exit 1

CMD ["nginx", "-g", "daemon off;"]
